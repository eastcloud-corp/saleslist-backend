version: '3.8'

services:
  # App Run #3: PostgreSQL Database
  database:
    build: ./saleslist-database
    container_name: social-navigator-database
    environment:
      POSTGRES_DB: social_navigator
      POSTGRES_USER: social_navigator_user
      POSTGRES_PASSWORD: social_navigator_password
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - social-navigator-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U social_navigator_user -d social_navigator"]
      interval: 10s
      timeout: 5s
      retries: 5

  # App Run #2: Django Backend
  backend:
    build: ./saleslist-backend
    container_name: social-navigator-backend
    environment:
      - DATABASE_URL=postgresql://social_navigator_user:social_navigator_password@database:5432/social_navigator
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=social_navigator
      - DB_USER=social_navigator_user
      - DB_PASSWORD=social_navigator_password
      - DEBUG=True
      - SECRET_KEY=django-local-development-key-not-for-production
    ports:
      - "8002:8000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - social-navigator-network
    volumes:
      - ./saleslist-backend:/app
    command: >
      sh -c "
        python manage.py migrate &&
        python seed_data.py &&
        gunicorn --bind 0.0.0.0:8000 --reload saleslist_backend.wsgi:application
      "

  # App Run #1: Next.js Frontend
  frontend:
    build: ./saleslist-front
    container_name: social-navigator-frontend
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8002/api/v1
      - NODE_ENV=development
    ports:
      - "3002:3000"
    volumes:
      - ./saleslist-front:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - social-navigator-network

volumes:
  postgres_data:

networks:
  social-navigator-network:
    driver: bridge

# Phase 2用 Redis構成（コメントアウト）
#   redis:
#     build: ./saleslist-redis
#     container_name: social-navigator-redis
#     ports:
#       - "6379:6379"
#     volumes:
#       - redis_data:/data
#     networks:
#       - social-navigator-network
#     healthcheck:
#       test: ["CMD", "redis-cli", "ping"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

# volumes:
#   redis_data: